#!/usr/bin/env bash
set -e
set -o pipefail;
hasMakeTest () {
    makefile=$(ls | grep -iE '^makefile$')
    if [[ -n $makefile ]];then
        if grep -E '^test:' $makefile >/dev/null; then
            return 0
        fi
    fi
    return 1
}

maketest () {
    if hasMakeTest;then
        echo make test
        make test
    # golang
    elif ls |grep -E '^go.mod$' >/dev/null; then
        echo go test -v ./...
       go test -coverpkg=./... ./... |tee coverage.out
       if [[ -f main.go ]] ;then
           go build -o /dev/null main.go
       elif [[ -f cmd/main.go ]] ;then
           go build -o /dev/null cmd/main.go
       fi
    # npm
    elif ls |grep -E '^package.json$' >/dev/null; then
        if grep -F '"test":' package.json >/dev/null;then
            echo npm test
            npm test
        else
            echo 'not found "test" in package.json'
        fi
    # deno
    elif ls |grep -E '^deno.jsonc?$' >/dev/null && ls *test* > /dev/null; then
        echo deno test ....
        deno test -A --no-check=remote
    # python
    elif ls |grep -E '^setup.py$' >/dev/null; then
        echo python3 -m pytest
        python3 -m pytest || exit 100
    # maven
    elif ls |grep -E '^pom.xml$' >/dev/null; then
        echo mvn clean test
        mvn clean test
    fi
}

checkDonau (){
    if test $(git branch --show-current) = donau/dev; then
        if grep 'artifactory.momenta.works/docker-momenta/' Dockerfile >/dev/null;then
            echo "donau contains 'artifactory.momenta.works/docker-momenta/'!"
            exit 1
        fi
    fi

}

checkDonau
maketest

